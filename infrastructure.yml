AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infrastructure setup for DevOps Pipeline with Jenkins and Kubernetes on AWS'

Parameters:
  VPCName:
    Type: String
    Default: DevOpsVPC
    Description: Name of the VPC
  CIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
  PublicSubnetCIDR:
    Type: String
    Default: 10.0.1.0/24
    Description: CIDR block for the public subnet
  PrivateSubnetCIDR:
    Type: String
    Default: 10.0.2.0/24
    Description: CIDR block for the private subnet

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VPCName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-IGW"

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PublicSubnet"

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCIDR
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PrivateSubnet"

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PublicRT"

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Jenkins and Kubernetes
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-SG"

  JenkinsEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.medium
      KeyName: "YourKeyPairName"  # Replace with your actual key pair name
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetId: !Ref PublicSubnet
      ImageId: ami-0c02fb55956c7d316  # Amazon Linux 2 AMI (replace if needed)
      Tags:
        - Key: Name
          Value: JenkinsServer

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${VPCName}-devops-bucket"
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-S3Bucket"

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub "${VPCName}-EKSCluster"
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PublicSubnet
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref SecurityGroup
      RoleArn: !GetAtt EKSClusterRole.Arn

  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [eks.amazonaws.com]
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EKSClusterPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:Describe*
                  - ec2:Create*
                  - ec2:Delete*
                  - elasticloadbalancing:*
                  - iam:PassRole
                  - eks:*
                  - autoscaling:*
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-EKSClusterRole"

Outputs:
  VPCId:
    Description: The ID of the VPC
    Value: !Ref VPC
  PublicSubnetId:
    Description: The ID of the Public Subnet
    Value: !Ref PublicSubnet
  PrivateSubnetId:
    Description: The ID of the Private Subnet
    Value: !Ref PrivateSubnet
  JenkinsInstanceId:
    Description: The ID of the Jenkins EC2 instance
    Value: !Ref JenkinsEC2Instance
  S3BucketName:
    Description: The name of the S3 bucket
    Value: !Ref S3Bucket
  EKSClusterName:
    Description: The name of the EKS cluster
    Value: !Ref EKSCluster
